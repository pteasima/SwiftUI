<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>import SwiftUI
import PencilKit
import PlaygroundSupport

final class PickerObserver: NSObject, PKToolPickerObserver {
    func toolPickerVisibilityDidChange(_ toolPicker: PKToolPicker) {
        toolPicker
    }
    func toolPickerFramesObscuredDidChange(_ toolPicker: PKToolPicker) {
        toolPicker
    }
    func toolPickerIsRulerActiveDidChange(_ toolPicker: PKToolPicker) {
        toolPicker
    }
    deinit {
        ":("
    }
}
let pickerObserver = PickerObserver() 

let canvas = PKCanvasView()

struct Canvas: UIViewRepresentable {
    func updateUIView(_ uiView: PKCanvasView, context: UIViewRepresentableContext&lt;Canvas&gt;) {
        
    }

    func makeUIView(context: UIViewRepresentableContext&lt;Canvas&gt;) -&gt; PKCanvasView {
        canvas
    }
}

struct AppView: View {
    var body: some View {
        Canvas()
        .onAppear {
            DispatchQueue.main.async {
                let picker = PKToolPicker.shared(for: canvas.window!)
                picker?.setVisible(true, forFirstResponder: canvas)
                picker?.addObserver(canvas)
                picker?.addObserver(pickerObserver)
                canvas.becomeFirstResponder()
            }
        }
    }
}

PlaygroundPage.current.setLiveView(AppView())

</string>
			<key>ModifiedRange</key>
			<string>{0, 1249}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{0, 0}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
